#!/usr/bin/env ruby

# Create a system in a warehouse

require 'palletjack/tool'

class CreateSystem < PalletJack::Tool
  def parse_options(opts)
    opts.banner =
"Usage: #{$PROGRAM_NAME} -w <warehouse> -s <system> -d <domain> \\
                      [ -o <os> | -n <netinstall> ]

Create system objects in a warehouse"

    opts.on('-s SYSTEM', '--system SYSTEM', 'system name', String) {|system|
      options[:system] = system }
    opts.on('-d DOMAIN', '--domain DOMAIN', 'domain name', String) {|domain|
      options[:domain] = domain }
    opts.on('-o OS', '--os OS', 'operating system name', String) {|os|
      options[:os] = os }
    opts.on('-n OS', '--netinstall NETINSTALL', 'network installation profile',
            String) {|netinstall| options[:netinstall] = netinstall }

    required_option :system
    required_option :domain
    required_option :os, :netinstall
    exclusive_options :os, :netinstall
  end
end

CreateSystem.run do
  pallet_dir 'system', :system
  pallet_box 'system', :system, 'role' do
    { system:{ role:[ '' ] } }
  end
  pallet_links 'system', :system, domain:['domain', :domain]
  pallet_links 'system', :system,
    if options[:os]
      { os:['os', :os], netinstall:[] }
    elsif options[:netinstall]
      { os:[], netinstall:['netinstall', :netinstall] }
    else
      abort('Both --os and --netinstall were nil; should not happen!')
    end
end
